@mixin news-list($counter: 3, $direction: row, $content: flex-start, $items: flex-start, $abstand:$galerieAbstand, $abstandRow:$galerieAbstandRow) {
  $abstandReal: ($abstand/2);
  display: flex;
  flex-direction: #{$direction};
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: #{$content};
  align-items: #{$items};
  overflow: visible;
  @include image();

  figure {
    figcaption {
      position: absolute;
      bottom: 5px;
      left: 5px;
      font-size: 40%;
      color: $white;
    }
  }
  > * {
    display: block;

    > * {
      margin-bottom: $abstandRow;
    }

    > a {
      display: block;
    }
  }
  @if ($counter % 2 != 0) {
    > * {
      width: (100% / 3);

      @for $x from 1 through 2 {
        &:nth-of-type( 3n+#{$x}) {

          > * {
            margin-right: (($abstandReal * 2)*((3 - $x)/3));
            margin-left: (($abstandReal * 2)*(($x - 1)/3));
          }
        }
      }
      @for $y from 1 through 1 {
        $z: ($y - 1);
        &:nth-of-type(3n - #{$z}) {

          > * {
            margin-left: (($abstandReal * 2)*((3 - $y)/3));
            margin-right: (($abstandReal * 2)*(($y - 1)/3));
          }
        }
      }

    }
  } @else {
    > * {
      width: 50%;
      @for $x from 1 through 1 {
        &:nth-of-type(2n+#{$x}) {
          > * {
            margin-right: (($abstandReal * 2)*((2 - $x)/2));
            margin-left: (($abstandReal * 2)*(($x - 1)/2));
          }
        }
      }
      @for $y from 1 through 1 {
        $z: ($y - 1);
        &:nth-of-type(2n - #{$z}) {

          > * {
            margin-left: (($abstandReal * 2)*((2 - $y)/2));
            margin-right: (($abstandReal * 2)*(($y - 1)/2));
          }
        }
      }
    }
  }

  @media all and (min-width: $break2) {
    li {
      width: (100% / $counter);

      @if ($counter % 2 != 0) {
        @for $x from 1 through (($counter+1)/2) {
          &:nth-of-type(#{$counter}*n+#{$x}) {

            > * {
              margin-right: (($abstandReal * 2)*(($counter - $x)/$counter));
              margin-left: (($abstandReal * 2)*(($x - 1)/$counter));
            }
          }
        }
        @for $y from 1 through (($counter - 1)/2) {
          $z: ($y - 1);
          &:nth-of-type(#{$counter}*n - #{$z}) {

            > * {
              margin-left: (($abstandReal * 2)*(($counter - $y)/$counter));
              margin-right: (($abstandReal * 2)*(($y - 1)/$counter));
            }
          }
        }
      } @else {
        @for $x from 1 through ($counter/2) {
          &:nth-of-type(#{$counter}*n+#{$x}) {
            > * {
              margin-right: (($abstandReal * 2)*(($counter - $x)/$counter));
              margin-left: (($abstandReal * 2)*(($x - 1)/$counter));
            }
          }
        }
        @for $y from 1 through ($counter /2) {
          $z: ($y - 1);
          &:nth-of-type(#{$counter}*n - #{$z}) {

            > * {
              margin-left: (($abstandReal * 2)*(($counter - $y)/$counter));
              margin-right: (($abstandReal * 2)*(($y - 1)/$counter));
            }
          }
        }
      }

      &:nth-of-type(#{$counter}*n) {
        > * {
          margin-right: 0;
        }
      }

      &:nth-of-type(#{$counter}*n+1) {
        > * {
          margin-left: 0;
        }
      }
    }
  }
}

