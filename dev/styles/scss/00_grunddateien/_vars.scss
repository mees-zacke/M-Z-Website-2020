/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////// VARIABLEN /////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////
/////////// Breakpoints ///////////
///////////////////////////////////
$break1: 30em; // 480px
$break2: 48em; // 768px
$break3: 64em; // 1024px
$break4: 90em; // 1920px


/////////////////////////////////////
/////////// Inhaltsgrößen ///////////
/////////////////////////////////////
$pageWidth: 100rem;
$abstandAussen: 0.75rem;
$abstandElemente: 1rem;
$abstandArtikel: (6 * $abstandElemente);

////////////////////////////
/////////// Grid ///////////
////////////////////////////
$columns: 14;
$rows: auto;
$column-gap: 2vw;
$row-gap: (3 * $abstandElemente);

///////////////////////////////////
/////////// Animationen ///////////
///////////////////////////////////
$transitionTime: 0.3s;
$buttonPushScale: 0.8;
$imageHoverScale: 1.2;
$bounceTransition: cubic-bezier(0.550, 1.650, 0.700, 0.985);


/////////// Galerien ///////////
$galerieAbstand: 10%;
$galerieAbstandRow: $galerieAbstand;

////////////////////////////////
/////////// Farben /////////////
////////////////////////////////
$white: var(--color-white);
$black: var(--color-black);
$color1: var(--color1-red);
$color2: var(--color2-grey);
$color3: var(--color3-lightgrey);
$color4: cyan;
$borderColor: var(--color-border);

$backgroundColor1: $white;

$shadow: 2px 2px 3px alpha($black, 0.7);


////////////////////////////////
/////////// Schrift ////////////
////////////////////////////////
$font1: 'Catamaran', Helvetica, sans-serif;
$font2: 'Catamaran', Verdana, sans-serif;

/////////// Fließtext ///////////
////// Fließtext Größen //////
// Fließtext //
$max-fontSize: 18;
$min-fontSize: 16;

// Teaser //
$max-teaserSize: 23;
$min-teaserSize: 18;

// Link //
$max-linkSize: 16;
$min-linkSize: 14;

////// Fließtext Farben //////
$fontColor: lightness($black, 5%);
$fontColor2: $fontColor;

$linkColor: $color2;
$linkColorHover: $color1;

$colorImageCaption: $fontColor;

$fontWidth: 300;
$linkWidth: $fontWidth;
$lineHeight: 150%;
$fontSpacing: 0.05em;
/////////// Überschriften ///////////
////// Überschriften Größen //////
// h1 //
$max-h1Size: 40;
$min-h1Size: 30;

// h2 //
$max-h2Size: 36;
$min-h2Size: 28;

// h3 //
$max-h3Size: 26;
$min-h3Size: 20;

// h4 //
$max-h4Size: $max-teaserSize;
$min-h4Size: $min-teaserSize;

// h5 //
$max-h5Size: $max-fontSize;
$min-h5Size: $min-fontSize;

// h6 //
$max-h6Size: $max-linkSize;
$min-h6Size: $min-linkSize;

$hWidth: 300;
$hLineHeight: 1.5;

////// Überschriften Farben //////
$hColor: $fontColor;
$hColor2: $hColor;


/////////////////////////////
/////////// SVGs ////////////
/////////////////////////////
$lupeColor: $fontColor;
$checkboxHakenColor: $fontColor;
$radioColor: $fontColor;

$minusColor: $color1;
$plusColor: $color1;

$lightboxIconColor: $white;
$lightboxIconWidth: 10;

$MZplusColor: $color2;

@import "_vars-berechnungen";

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////// Allg. MIXINS //////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@mixin pageWidth {
  max-width: $pageWidth;
  margin: 0 auto;
  padding-left: $abstandAussen;
  padding-right: $abstandAussen;
}

@mixin transition($affects:all,$time:$transitionTime) {
  transition: ease $affects $time;
}

@mixin button-push($time:$transitionTime,$scale:$buttonPushScale) {
  transition: transform ease-out $time;
  &:active {
    transform: scale($scale);
  }
}

@mixin button-push-inner($time:$transitionTime,$scale:$buttonPushScale) {
  > * {
    transition: transform ease-out $time;
  }
  &:active {
    > * {
      transform: scale($scale);
    }
  }
}

@mixin hover-height($height:20px, $activator:"&:hover") {
  filter: drop-shadow(0 0 0 alpha($black, 0.4));
  #{$activator} {
    transform: translateY(-$height);
    filter: drop-shadow(($height / 4) $height ($height / 4) alpha($black, 0.1));
  }
}

@mixin aspect-ratio($width,$aspectRatio) {
  width: $width;
  height: calc(#{$width} / #{$aspectRatio});
}

@mixin link($color:$linkColor, $colorHover:$linkColorHover, $border:"none", $borderHover:$colorHover, $colorOnly: false, $colorActive:lightness($linkColorHover, -40%)) {
  @include transition();
  cursor: pointer;
  text-decoration: none;
  font-weight: $linkWidth;
  color: $color;

  @if ($colorOnly) {
    border-bottom: 1px solid transparent;
  } @else if ($border != "none") {
    border-bottom: 1px solid $border;
  } @else {
    border-bottom: none;
  }

  &:hover, &:focus {
    color: $linkColorHover;
    @if ($colorOnly) {
      border-color: $borderColor;
    } @else if ($border != "none") {
      border-color: $borderHover;
    }
  }
  &:active {
    color: $colorActive;
  }
}

@mixin hover-scale-up($time:$transitionTime,$scale:$imageHoverScale) {
  transition: transform $bounceTransition $time;
  position: relative;
  &:hover, &:focus {
    z-index: 5;
    transform: scale($scale);
  }
}

@mixin hover-scale-up-image($time:$transitionTime,$scale:$imageHoverScale) {
  img {
    position: relative;
    transition: transform $bounceTransition $time;
  }
  &:hover, &:focus {
    img {
      z-index: 5;
      transform: scale($scale);
    }
  }
}

@mixin hover-overlay-full($bgColor:$color1,$color:$white,$vertikal:center,$horizontal:center) {
  /////// Benötigt Element mit Klasse "hover" innerhalb von auslösendem Element ///////
  /////// Hover bezieht sich auf Höhe des Elternelements ///////
  .hover {
    @include transition();
    position: absolute;
    display: flex;
    align-items: $vertikal;
    height: 100%;
    width: 100%;
    text-align: $horizontal;
    justify-content: $horizontal;
    top: 0;
    left: 0;
    padding: $abstandElemente;
    opacity: 0;
    background-color: $bgColor;
    @media all and (max-width: $break2) {
      h2, h3, h4, h5, h6 {
        font-size: $h3Size;
        line-height: 1.3;
      }
      p {
        font-size: $linkSize;
        line-height: 1.3;
      }
    }
    @media all and (max-width: $break1) {
      h2, h3, h4, h5, h6 {
        font-size: $teaserSize;
        line-height: 1.3;
      }
      p {
        font-size: calc(#{$linkSize} * 0.8);
        line-height: 1.3;
      }
    }

    > * {
      position: relative;
      @include transition();
      transform: translateY(200%);

      &:after {
        @include transition();
        content: "";
        display: block;
        background: $white;
        width: 100%;
        height: 1px;
        transform-origin: center;
        transform: scale(0);
      }
    }

    * {
      margin: 0;
      color: $color;
    }
  }
  &:hover, &:focus {
    .hover {
      opacity: 1;

      > * {
        transform: translateY(0);
      }
    }
  }
  &:active, &.clicked {
    .hover {
      > * {
        &:after {
          transform: scale(1);
        }
      }
    }
  }
}

@mixin hover-overlay-content($bgColor:$color1,$color:$white,$vertikal:flex-end,$horizontal:center) {
  /////// Benötigt Element mit Klasse "hover" innerhalb von auslösendem Element ///////
  /////// Hover bezieht sich auf Höhe des Inhalts ///////
  .hover {
    position: absolute;
    display: flex;
    align-items: $vertikal;
    height: 100%;
    width: 100%;
    text-align: $horizontal;
    top: 0;
    left: 0;
    @media all and (max-width: $break2) {
      h2, h3, h4, h5, h6 {
        font-size: $h3Size;
        line-height: 1.3;
      }
      p {
        font-size: $linkSize;
        line-height: 1.3;
      }
    }
    @media all and (max-width: $break1) {
      h2, h3, h4, h5, h6 {
        font-size: $teaserSize;
        line-height: 1.3;
      }
      p {
        font-size: calc(#{$linkSize} * 0.8);
        line-height: 1.3;
      }
    }

    > * {
      @include transition();
      padding: $abstandElemente;
      opacity: 0;
      background-color: alpha($bgColor, 0.5);
      transform: translateY(200%);
      position: relative;

      &:after {
        @include transition();
        content: "";
        display: block;
        background: $white;
        width: 100%;
        height: 1px;
        transform-origin: center;
        transform: scale(0);
      }
    }

    * {
      margin: 0;
      color: $color;
    }
  }
  &:hover, &:focus {
    .hover {
      > * {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
  &:active, &.clicked {
    .hover {
      > * {
        &:after {
          transform: scale(1);
        }
      }
    }
  }
}

.wow {
  visibility: hidden;
  animation-delay: 0s !important;
}
