////////////////////////////////
/////////// Span ///////////////
////////////////////////////////

// Standard mobile Größe

@mixin spans($columns, $rows, $column-gap, $row-gap) {

  @for $i from 1 through $columns {
    .span-#{$i} {
      grid-column: auto / span ($i);
    }
  }

  @media screen and (max-width: $break2) {
    @for $i from 1 through $columns {
      .span-#{$i} {
        grid-column: auto / span ($columns);
      }
    }
  }

  // alle Breiten

  @media screen and (max-width: $break1) {
    @for $i from 1 through $columns {
      .span-#{$i} {
        grid-column: auto / span ($columns);
      }
    }
  }
}

/////////////////////////////////
/////////// Start ///////////////
/////////////////////////////////

// Standard mobile Größe

@mixin starts($columns) {

  // Breakpoint 3

  // Alle Positionen

  @for $i from 1 through $columns {
    .starts-#{$i} {
      grid-column-start: ($i);
    }
  }

  @media screen and (max-width: $break1) {
    @for $i from 1 through $columns {
      .starts-#{$i} {
        grid-column-start: auto;
      }
    }
  }
}

////////////////////////////////
/////////// Grid ///////////////
////////////////////////////////

@mixin grid($columns: $columns, $rows: $rows, $column-gap: $column-gap, $row-gap: $row-gap) {
  display: grid;
  grid-template-columns: $abstandAussen repeat(#{$columns - 2}, 1fr) $abstandAussen;
  grid-template-rows: $rows;
  grid-column-gap: $column-gap;
  grid-row-gap: $row-gap;
  @media all and (min-width: $pageWidth) {
    grid-template-columns: 5vw repeat(#{$columns - 2}, 1fr) 5vw;
  }
  @media all and (max-width: $break1) {
    grid-row-gap: calc(#{$row-gap} * 0.75);
  }
  @include spans($columns, $rows, $column-gap, $row-gap);
  @include starts($columns);
}